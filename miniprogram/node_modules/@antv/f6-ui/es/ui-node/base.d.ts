export default abstract class UIBaseNode {
    styleNode: any;
    gNode: any;
    parent: any;
    children: any[];
    isMounted: boolean;
    isDisplay: boolean;
    private _parentGNode;
    private _prevAttrs;
    private _prevStyle;
    private _prevLayout;
    private events;
    constructor(styleNode?: any);
    get top(): any;
    get left(): any;
    get width(): any;
    get height(): any;
    get tagName(): any;
    get style(): any;
    get attributes(): any;
    private get _layout();
    set parentGNode(gNode: any);
    get parentGNode(): any;
    setParent(parent: any): void;
    appendChild(...list: any[]): void;
    removeChild(child: any): void;
    remove(): void;
    query(selector: any): any;
    queryAll(selector: any): any[];
    private manualMount;
    reflow(): void;
    layout(): void;
    mount(): void;
    didMount(): void;
    unmount(): void;
    didUnmount(): void;
    private render;
    didUpdate(): void;
    shouldUpdate(prevAttr: any, prevStyle: any, prevLayout: any): boolean;
    draw(parentGNode?: any): void;
    animate(): void;
    private clearLayout;
    setAttribute(key: any, value: any): void;
    setStyle(key: any, value: any): void;
    getAttribute(key: any): any;
    getStyle(key: any): any;
    setText(text: any): void;
    trigger: (e: any) => void;
    on(eventName: any, fn: any): void;
    off(eventName: any, fn: any): void;
}
