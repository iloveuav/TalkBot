"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _f6Ui = require("@antv/f6-ui");

var _dispatcher = require("../../dispatcher");

var _const = require("../../utils/const");

var _controlBtn = _interopRequireDefault(require("./control-btn"));

var _playBtn = _interopRequireDefault(require("./play-btn"));

var _util = require("@antv/util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createControlbar(option) {
  var mixOption = (0, _util.deepMix)({}, _const.DEFAULT_CONTROLLER_CONFIG, option);
  var wrapperWidth = mixOption.wrapperWidth,
      contentWidth = mixOption.contentWidth,
      height = mixOption.height,
      fill = mixOption.fill,
      stroke = mixOption.stroke,
      nextBtnStyle = mixOption.nextBtnStyle,
      preBtnStyle = mixOption.preBtnStyle,
      playBtnStyle = mixOption.playBtnStyle,
      speed = mixOption.speed;
  var html = "\n    <div class='wrapper'>\n      <div class='content'> \n\n      </div>\n    </div>\n  ";
  var css = "\n    .wrapper {\n      display: flex;\n      width: " + wrapperWidth + ";\n      height: " + height + ";\n      flex-wrap: nowrap;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      background: " + fill + ";\n      " + (stroke ? "border: 1 solid " + stroke + ";" : '') + "\n    }\n    .content{\n      display: flex;\n      width: " + contentWidth + ";\n      flex-wrap: nowrap;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      background-opacity: 0;\n    }\n";
  var uiTree = (0, _f6Ui.createSegmentNode)(html, css);
  var nextBtn = (0, _controlBtn.default)('next', nextBtnStyle);
  var prevBtn = (0, _controlBtn.default)('prev', preBtnStyle);
  var playBtn = (0, _playBtn.default)(playBtnStyle);
  (0, _dispatcher.dispatch)(_const.SPEED_CHANGE, speed);
  nextBtn.on('tap', function () {
    (0, _dispatcher.dispatch)(_const.CONTROL_NEXT);
  });
  prevBtn.on('tap', function () {
    (0, _dispatcher.dispatch)(_const.CONTROL_PREV);
  });
  uiTree.query('.content').appendChild(prevBtn, playBtn, nextBtn);
  return uiTree;
}

var _default = createControlbar;
exports.default = _default;