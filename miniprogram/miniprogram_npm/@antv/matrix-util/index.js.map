{"version":3,"sources":["index.js","ext.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gl_matrix_1 = require(\"gl-matrix\");\r\nexports.mat3 = gl_matrix_1.mat3;\r\nexports.vec2 = gl_matrix_1.vec2;\r\nexports.vec3 = gl_matrix_1.vec3;\r\nvar ext = require(\"./ext\");\r\nexports.ext = ext;\r\n//# sourceMappingURL=index.js.map","\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description 扩展方法，提供 gl-matrix 为提供的方法\r\n * */\r\nvar gl_matrix_1 = require(\"gl-matrix\");\r\nfunction leftTranslate(out, a, v) {\r\n    var transMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    gl_matrix_1.mat3.fromTranslation(transMat, v);\r\n    return gl_matrix_1.mat3.multiply(out, transMat, a);\r\n}\r\nexports.leftTranslate = leftTranslate;\r\nfunction leftRotate(out, a, rad) {\r\n    var rotateMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    gl_matrix_1.mat3.fromRotation(rotateMat, rad);\r\n    return gl_matrix_1.mat3.multiply(out, rotateMat, a);\r\n}\r\nexports.leftRotate = leftRotate;\r\nfunction leftScale(out, a, v) {\r\n    var scaleMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    gl_matrix_1.mat3.fromScaling(scaleMat, v);\r\n    return gl_matrix_1.mat3.multiply(out, scaleMat, a);\r\n}\r\nexports.leftScale = leftScale;\r\nfunction leftMultiply(out, a, a1) {\r\n    return gl_matrix_1.mat3.multiply(out, a1, a);\r\n}\r\n/**\r\n * 根据 actions 来做 transform\r\n * @param m\r\n * @param actions\r\n */\r\nfunction transform(m, actions) {\r\n    var matrix = m ? [].concat(m) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n    for (var i = 0, len = actions.length; i < len; i++) {\r\n        var action = actions[i];\r\n        switch (action[0]) {\r\n            case 't':\r\n                leftTranslate(matrix, matrix, [action[1], action[2]]);\r\n                break;\r\n            case 's':\r\n                leftScale(matrix, matrix, [action[1], action[2]]);\r\n                break;\r\n            case 'r':\r\n                leftRotate(matrix, matrix, action[1]);\r\n                break;\r\n            case 'm':\r\n                leftMultiply(matrix, matrix, action[1]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return matrix;\r\n}\r\nexports.transform = transform;\r\n/**\r\n * 向量 v1 到 向量 v2 夹角的方向\r\n * @param  {Array} v1 向量\r\n * @param  {Array} v2 向量\r\n * @return {Boolean} >= 0 顺时针 < 0 逆时针\r\n */\r\nfunction direction(v1, v2) {\r\n    return v1[0] * v2[1] - v2[0] * v1[1];\r\n}\r\nexports.direction = direction;\r\n/**\r\n * 二维向量 v1 到 v2 的夹角\r\n * @param v1\r\n * @param v2\r\n * @param direct\r\n */\r\nfunction angleTo(v1, v2, direct) {\r\n    var ang = gl_matrix_1.vec2.angle(v1, v2);\r\n    var angleLargeThanPI = direction(v1, v2) >= 0;\r\n    if (direct) {\r\n        if (angleLargeThanPI) {\r\n            return Math.PI * 2 - ang;\r\n        }\r\n        return ang;\r\n    }\r\n    if (angleLargeThanPI) {\r\n        return ang;\r\n    }\r\n    return Math.PI * 2 - ang;\r\n}\r\nexports.angleTo = angleTo;\r\n/**\r\n * 计算二维向量的垂直向量\r\n * @param out\r\n * @param v\r\n * @param flag\r\n */\r\nfunction vertical(out, v, flag) {\r\n    if (flag) {\r\n        out[0] = v[1];\r\n        out[1] = -1 * v[0];\r\n    }\r\n    else {\r\n        out[0] = -1 * v[1];\r\n        out[1] = v[0];\r\n    }\r\n    return out;\r\n}\r\nexports.vertical = vertical;\r\n//# sourceMappingURL=ext.js.map"]}