{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\r\n\r\nconst ANSI_BACKGROUND_OFFSET = 10;\r\n\r\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\r\n\r\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\r\n\r\nfunction assembleStyles() {\r\n\tconst codes = new Map();\r\n\tconst styles = {\r\n\t\tmodifier: {\r\n\t\t\treset: [0, 0],\r\n\t\t\t// 21 isn't widely supported and 22 does the same thing\r\n\t\t\tbold: [1, 22],\r\n\t\t\tdim: [2, 22],\r\n\t\t\titalic: [3, 23],\r\n\t\t\tunderline: [4, 24],\r\n\t\t\toverline: [53, 55],\r\n\t\t\tinverse: [7, 27],\r\n\t\t\thidden: [8, 28],\r\n\t\t\tstrikethrough: [9, 29]\r\n\t\t},\r\n\t\tcolor: {\r\n\t\t\tblack: [30, 39],\r\n\t\t\tred: [31, 39],\r\n\t\t\tgreen: [32, 39],\r\n\t\t\tyellow: [33, 39],\r\n\t\t\tblue: [34, 39],\r\n\t\t\tmagenta: [35, 39],\r\n\t\t\tcyan: [36, 39],\r\n\t\t\twhite: [37, 39],\r\n\r\n\t\t\t// Bright color\r\n\t\t\tblackBright: [90, 39],\r\n\t\t\tredBright: [91, 39],\r\n\t\t\tgreenBright: [92, 39],\r\n\t\t\tyellowBright: [93, 39],\r\n\t\t\tblueBright: [94, 39],\r\n\t\t\tmagentaBright: [95, 39],\r\n\t\t\tcyanBright: [96, 39],\r\n\t\t\twhiteBright: [97, 39]\r\n\t\t},\r\n\t\tbgColor: {\r\n\t\t\tbgBlack: [40, 49],\r\n\t\t\tbgRed: [41, 49],\r\n\t\t\tbgGreen: [42, 49],\r\n\t\t\tbgYellow: [43, 49],\r\n\t\t\tbgBlue: [44, 49],\r\n\t\t\tbgMagenta: [45, 49],\r\n\t\t\tbgCyan: [46, 49],\r\n\t\t\tbgWhite: [47, 49],\r\n\r\n\t\t\t// Bright color\r\n\t\t\tbgBlackBright: [100, 49],\r\n\t\t\tbgRedBright: [101, 49],\r\n\t\t\tbgGreenBright: [102, 49],\r\n\t\t\tbgYellowBright: [103, 49],\r\n\t\t\tbgBlueBright: [104, 49],\r\n\t\t\tbgMagentaBright: [105, 49],\r\n\t\t\tbgCyanBright: [106, 49],\r\n\t\t\tbgWhiteBright: [107, 49]\r\n\t\t}\r\n\t};\r\n\r\n\t// Alias bright black as gray (and grey)\r\n\tstyles.color.gray = styles.color.blackBright;\r\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\r\n\tstyles.color.grey = styles.color.blackBright;\r\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\r\n\r\n\tfor (const [groupName, group] of Object.entries(styles)) {\r\n\t\tfor (const [styleName, style] of Object.entries(group)) {\r\n\t\t\tstyles[styleName] = {\r\n\t\t\t\topen: `\\u001B[${style[0]}m`,\r\n\t\t\t\tclose: `\\u001B[${style[1]}m`\r\n\t\t\t};\r\n\r\n\t\t\tgroup[styleName] = styles[styleName];\r\n\r\n\t\t\tcodes.set(style[0], style[1]);\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(styles, groupName, {\r\n\t\t\tvalue: group,\r\n\t\t\tenumerable: false\r\n\t\t});\r\n\t}\r\n\r\n\tObject.defineProperty(styles, 'codes', {\r\n\t\tvalue: codes,\r\n\t\tenumerable: false\r\n\t});\r\n\r\n\tstyles.color.close = '\\u001B[39m';\r\n\tstyles.bgColor.close = '\\u001B[49m';\r\n\r\n\tstyles.color.ansi256 = wrapAnsi256();\r\n\tstyles.color.ansi16m = wrapAnsi16m();\r\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\r\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\r\n\r\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\r\n\tObject.defineProperties(styles, {\r\n\t\trgbToAnsi256: {\r\n\t\t\tvalue: (red, green, blue) => {\r\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\r\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\r\n\t\t\t\tif (red === green && green === blue) {\r\n\t\t\t\t\tif (red < 8) {\r\n\t\t\t\t\t\treturn 16;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (red > 248) {\r\n\t\t\t\t\t\treturn 231;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 16 +\r\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\r\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\r\n\t\t\t\t\tMath.round(blue / 255 * 5);\r\n\t\t\t},\r\n\t\t\tenumerable: false\r\n\t\t},\r\n\t\thexToRgb: {\r\n\t\t\tvalue: hex => {\r\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\r\n\t\t\t\tif (!matches) {\r\n\t\t\t\t\treturn [0, 0, 0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet {colorString} = matches.groups;\r\n\r\n\t\t\t\tif (colorString.length === 3) {\r\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t(integer >> 16) & 0xFF,\r\n\t\t\t\t\t(integer >> 8) & 0xFF,\r\n\t\t\t\t\tinteger & 0xFF\r\n\t\t\t\t];\r\n\t\t\t},\r\n\t\t\tenumerable: false\r\n\t\t},\r\n\t\thexToAnsi256: {\r\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\r\n\t\t\tenumerable: false\r\n\t\t}\r\n\t});\r\n\r\n\treturn styles;\r\n}\r\n\r\n// Make the export immutable\r\nObject.defineProperty(module, 'exports', {\r\n\tenumerable: true,\r\n\tget: assembleStyles\r\n});\r\n"]}