{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\r\n\r\nvar isAnyArray = require('is-any-array');\r\n\r\nfunction max(input, options = {}) {\r\n  if (!isAnyArray.isAnyArray(input)) {\r\n    throw new TypeError('input must be an array');\r\n  }\r\n\r\n  if (input.length === 0) {\r\n    throw new TypeError('input must not be empty');\r\n  }\r\n\r\n  const { fromIndex = 0, toIndex = input.length } = options;\r\n\r\n  if (\r\n    fromIndex < 0 ||\r\n    fromIndex >= input.length ||\r\n    !Number.isInteger(fromIndex)\r\n  ) {\r\n    throw new Error('fromIndex must be a positive integer smaller than length');\r\n  }\r\n\r\n  if (\r\n    toIndex <= fromIndex ||\r\n    toIndex > input.length ||\r\n    !Number.isInteger(toIndex)\r\n  ) {\r\n    throw new Error(\r\n      'toIndex must be an integer greater than fromIndex and at most equal to length',\r\n    );\r\n  }\r\n\r\n  let maxValue = input[fromIndex];\r\n  for (let i = fromIndex + 1; i < toIndex; i++) {\r\n    if (input[i] > maxValue) maxValue = input[i];\r\n  }\r\n  return maxValue;\r\n}\r\n\r\nmodule.exports = max;\r\n"]}