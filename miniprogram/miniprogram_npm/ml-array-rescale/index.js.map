{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\r\n\r\nvar isAnyArray = require('is-any-array');\r\nvar max = require('ml-array-max');\r\nvar min = require('ml-array-min');\r\n\r\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\r\n\r\nvar max__default = /*#__PURE__*/_interopDefaultLegacy(max);\r\nvar min__default = /*#__PURE__*/_interopDefaultLegacy(min);\r\n\r\nfunction rescale(input, options = {}) {\r\n  if (!isAnyArray.isAnyArray(input)) {\r\n    throw new TypeError('input must be an array');\r\n  } else if (input.length === 0) {\r\n    throw new TypeError('input must not be empty');\r\n  }\r\n\r\n  let output;\r\n  if (options.output !== undefined) {\r\n    if (!isAnyArray.isAnyArray(options.output)) {\r\n      throw new TypeError('output option must be an array if specified');\r\n    }\r\n    output = options.output;\r\n  } else {\r\n    output = new Array(input.length);\r\n  }\r\n\r\n  const currentMin = min__default['default'](input);\r\n  const currentMax = max__default['default'](input);\r\n\r\n  if (currentMin === currentMax) {\r\n    throw new RangeError(\r\n      'minimum and maximum input values are equal. Cannot rescale a constant array',\r\n    );\r\n  }\r\n\r\n  const {\r\n    min: minValue = options.autoMinMax ? currentMin : 0,\r\n    max: maxValue = options.autoMinMax ? currentMax : 1,\r\n  } = options;\r\n\r\n  if (minValue >= maxValue) {\r\n    throw new RangeError('min option must be smaller than max option');\r\n  }\r\n\r\n  const factor = (maxValue - minValue) / (currentMax - currentMin);\r\n  for (let i = 0; i < input.length; i++) {\r\n    output[i] = (input[i] - currentMin) * factor + minValue;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nmodule.exports = rescale;\r\n"]}